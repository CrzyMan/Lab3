package primeFactors;

import static org.junit.Assert.*;
import static primeFactors.PrimeNumbers.generate;

import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

//@RunWith(Parameterized.class)
public class PrimeNumbersTest {
	/* */
	private Integer input;
	private boolean expected;
	//private PrimeNumbers primeNumbers;
	
	@Before
	public void initialize() {
		//primeNumberChecker = new PrimeNumberChecker();
	}
	
	public PrimeNumbersTest(Integer inputNumber, boolean expectedValue){
		input = inputNumber;
		expected = expectedValue;
	}
	
	@Parameterized.Parameters
	public static Collection<Object[]> primeNumbers() {
		return Arrays.asList(new Object[][]{
				{3, list(2)},
				{6, list(2)},
				{19, true},
				{22, false},
				{23, true}
		});
	}
		
	@Test
	public void testPrimeNumbersChecker() {
		assertEquals(expected, primeNumberChecker.generate(input));
	}
	/* */
	
	private static List<Integer> list(Integer...integers) {
		return Arrays.asList(integers);
	}
	
	@Test
	public void testThree() throws Exception {
		assertEquals(list(2), generate(3));
	}
	
	@Test
	public void testThirteen() throws Exception {
		assertEquals(list(2,3,5,7,11), generate(13));
	}

}
